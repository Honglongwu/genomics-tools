/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * Model definition for Read.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 */
@SuppressWarnings("javadoc")
public final class Read extends com.google.api.client.json.GenericJson {

  /**
   * (SEQ) The aligned sequence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String alignedSequence;

  /**
   * (CIGAR) CIGAR string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cigar;

  /**
   * Unique identifier for the containing BAM file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger fileId;

  /**
   * (FLAG) Bitwise flag.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer flags;

  /**
   * (MAPQ) Mapping quality.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer mappingQuality;

  /**
   * (PNEXT) Position of the primary alignment of the next read in the template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer mateSegmentPosition;

  /**
   * (RNEXT) Reference sequence name of the primary alignment of the next read in the template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mateSegmentReferenceName;

  /**
   * (SEQ) The original sequence.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String originalSequence;

  /**
   * (POS) 1-based leftmost mapping position of the first matching base.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer position;

  /**
   * (QNAME) Query template name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String qname;

  /**
   * (QUAL) ASCII of base quality plus 33.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String qual;

  /**
   * (RNAME) Reference sequence name of the alignment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String referenceSequenceName;

  /**
   * (TAG) Optional fields.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, Tag> tags;

  /**
   * (TLEN) Signed observed template length.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer templateLength;

  /**
   * (SEQ) The aligned sequence.
   * @return value or {@code null} for none
   */
  public java.lang.String getAlignedSequence() {
    return alignedSequence;
  }

  /**
   * (SEQ) The aligned sequence.
   * @param alignedSequence alignedSequence or {@code null} for none
   */
  public Read setAlignedSequence(java.lang.String alignedSequence) {
    this.alignedSequence = alignedSequence;
    return this;
  }

  /**
   * (CIGAR) CIGAR string.
   * @return value or {@code null} for none
   */
  public java.lang.String getCigar() {
    return cigar;
  }

  /**
   * (CIGAR) CIGAR string.
   * @param cigar cigar or {@code null} for none
   */
  public Read setCigar(java.lang.String cigar) {
    this.cigar = cigar;
    return this;
  }

  /**
   * Unique identifier for the containing BAM file.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getFileId() {
    return fileId;
  }

  /**
   * Unique identifier for the containing BAM file.
   * @param fileId fileId or {@code null} for none
   */
  public Read setFileId(java.math.BigInteger fileId) {
    this.fileId = fileId;
    return this;
  }

  /**
   * (FLAG) Bitwise flag.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFlags() {
    return flags;
  }

  /**
   * (FLAG) Bitwise flag.
   * @param flags flags or {@code null} for none
   */
  public Read setFlags(java.lang.Integer flags) {
    this.flags = flags;
    return this;
  }

  /**
   * (MAPQ) Mapping quality.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMappingQuality() {
    return mappingQuality;
  }

  /**
   * (MAPQ) Mapping quality.
   * @param mappingQuality mappingQuality or {@code null} for none
   */
  public Read setMappingQuality(java.lang.Integer mappingQuality) {
    this.mappingQuality = mappingQuality;
    return this;
  }

  /**
   * (PNEXT) Position of the primary alignment of the next read in the template.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMateSegmentPosition() {
    return mateSegmentPosition;
  }

  /**
   * (PNEXT) Position of the primary alignment of the next read in the template.
   * @param mateSegmentPosition mateSegmentPosition or {@code null} for none
   */
  public Read setMateSegmentPosition(java.lang.Integer mateSegmentPosition) {
    this.mateSegmentPosition = mateSegmentPosition;
    return this;
  }

  /**
   * (RNEXT) Reference sequence name of the primary alignment of the next read in the template.
   * @return value or {@code null} for none
   */
  public java.lang.String getMateSegmentReferenceName() {
    return mateSegmentReferenceName;
  }

  /**
   * (RNEXT) Reference sequence name of the primary alignment of the next read in the template.
   * @param mateSegmentReferenceName mateSegmentReferenceName or {@code null} for none
   */
  public Read setMateSegmentReferenceName(java.lang.String mateSegmentReferenceName) {
    this.mateSegmentReferenceName = mateSegmentReferenceName;
    return this;
  }

  /**
   * (SEQ) The original sequence.
   * @return value or {@code null} for none
   */
  public java.lang.String getOriginalSequence() {
    return originalSequence;
  }

  /**
   * (SEQ) The original sequence.
   * @param originalSequence originalSequence or {@code null} for none
   */
  public Read setOriginalSequence(java.lang.String originalSequence) {
    this.originalSequence = originalSequence;
    return this;
  }

  /**
   * (POS) 1-based leftmost mapping position of the first matching base.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPosition() {
    return position;
  }

  /**
   * (POS) 1-based leftmost mapping position of the first matching base.
   * @param position position or {@code null} for none
   */
  public Read setPosition(java.lang.Integer position) {
    this.position = position;
    return this;
  }

  /**
   * (QNAME) Query template name.
   * @return value or {@code null} for none
   */
  public java.lang.String getQname() {
    return qname;
  }

  /**
   * (QNAME) Query template name.
   * @param qname qname or {@code null} for none
   */
  public Read setQname(java.lang.String qname) {
    this.qname = qname;
    return this;
  }

  /**
   * (QUAL) ASCII of base quality plus 33.
   * @see #decodeQual()
   * @return value or {@code null} for none
   */
  public java.lang.String getQual() {
    return qual;
  }

  /**
   * (QUAL) ASCII of base quality plus 33.
   * @see #getQual()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeQual() {
    return com.google.api.client.util.Base64.decodeBase64(qual);
  }

  /**
   * (QUAL) ASCII of base quality plus 33.
   * @see #encodeQual()
   * @param qual qual or {@code null} for none
   */
  public Read setQual(java.lang.String qual) {
    this.qual = qual;
    return this;
  }

  /**
   * (QUAL) ASCII of base quality plus 33.
   * @see #setQual()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public Read encodeQual(byte[] qual) {
    this.qual = com.google.api.client.util.Base64.encodeBase64URLSafeString(qual);
    return this;
  }

  /**
   * (RNAME) Reference sequence name of the alignment.
   * @return value or {@code null} for none
   */
  public java.lang.String getReferenceSequenceName() {
    return referenceSequenceName;
  }

  /**
   * (RNAME) Reference sequence name of the alignment.
   * @param referenceSequenceName referenceSequenceName or {@code null} for none
   */
  public Read setReferenceSequenceName(java.lang.String referenceSequenceName) {
    this.referenceSequenceName = referenceSequenceName;
    return this;
  }

  /**
   * (TAG) Optional fields.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, Tag> getTags() {
    return tags;
  }

  /**
   * (TAG) Optional fields.
   * @param tags tags or {@code null} for none
   */
  public Read setTags(java.util.Map<String, Tag> tags) {
    this.tags = tags;
    return this;
  }

  /**
   * (TLEN) Signed observed template length.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTemplateLength() {
    return templateLength;
  }

  /**
   * (TLEN) Signed observed template length.
   * @param templateLength templateLength or {@code null} for none
   */
  public Read setTemplateLength(java.lang.Integer templateLength) {
    this.templateLength = templateLength;
    return this;
  }

  @Override
  public Read set(String fieldName, Object value) {
    return (Read) super.set(fieldName, value);
  }

  @Override
  public Read clone() {
    return (Read) super.clone();
  }

}
