/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * Model definition for Tag.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 */
@SuppressWarnings("javadoc")
public final class Tag extends com.google.api.client.json.GenericJson {

  /**
   * The bytes value (A, Z, H tags)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bytesValue;

  /**
   * The float integer array (Bf tags).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Float> floatArrays;

  /**
   * The float32 value (f tag).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float floatValue;

  /**
   * The signed integer array (Bc, Bs, Bi tags).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> intArrays;

  /**
   * The signed integer value (c, s, i tags).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer intValue;

  /**
   * Type of the value.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The unsigned integer array (BC, BS, BI tags).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Long> uintArrays;

  /**
   * The unsigned integer value (C, S, I tags).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long uintValue;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String unused2;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String unused3;

  /**
   * The bytes value (A, Z, H tags)
   * @see #decodeBytesValue()
   * @return value or {@code null} for none
   */
  public java.lang.String getBytesValue() {
    return bytesValue;
  }

  /**
   * The bytes value (A, Z, H tags)
   * @see #getBytesValue()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeBytesValue() {
    return com.google.api.client.util.Base64.decodeBase64(bytesValue);
  }

  /**
   * The bytes value (A, Z, H tags)
   * @see #encodeBytesValue()
   * @param bytesValue bytesValue or {@code null} for none
   */
  public Tag setBytesValue(java.lang.String bytesValue) {
    this.bytesValue = bytesValue;
    return this;
  }

  /**
   * The bytes value (A, Z, H tags)
   * @see #setBytesValue()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public Tag encodeBytesValue(byte[] bytesValue) {
    this.bytesValue = com.google.api.client.util.Base64.encodeBase64URLSafeString(bytesValue);
    return this;
  }

  /**
   * The float integer array (Bf tags).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Float> getFloatArrays() {
    return floatArrays;
  }

  /**
   * The float integer array (Bf tags).
   * @param floatArrays floatArrays or {@code null} for none
   */
  public Tag setFloatArrays(java.util.List<java.lang.Float> floatArrays) {
    this.floatArrays = floatArrays;
    return this;
  }

  /**
   * The float32 value (f tag).
   * @return value or {@code null} for none
   */
  public java.lang.Float getFloatValue() {
    return floatValue;
  }

  /**
   * The float32 value (f tag).
   * @param floatValue floatValue or {@code null} for none
   */
  public Tag setFloatValue(java.lang.Float floatValue) {
    this.floatValue = floatValue;
    return this;
  }

  /**
   * The signed integer array (Bc, Bs, Bi tags).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getIntArrays() {
    return intArrays;
  }

  /**
   * The signed integer array (Bc, Bs, Bi tags).
   * @param intArrays intArrays or {@code null} for none
   */
  public Tag setIntArrays(java.util.List<java.lang.Integer> intArrays) {
    this.intArrays = intArrays;
    return this;
  }

  /**
   * The signed integer value (c, s, i tags).
   * @return value or {@code null} for none
   */
  public java.lang.Integer getIntValue() {
    return intValue;
  }

  /**
   * The signed integer value (c, s, i tags).
   * @param intValue intValue or {@code null} for none
   */
  public Tag setIntValue(java.lang.Integer intValue) {
    this.intValue = intValue;
    return this;
  }

  /**
   * Type of the value.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Type of the value.
   * @param type type or {@code null} for none
   */
  public Tag setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * The unsigned integer array (BC, BS, BI tags).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getUintArrays() {
    return uintArrays;
  }

  /**
   * The unsigned integer array (BC, BS, BI tags).
   * @param uintArrays uintArrays or {@code null} for none
   */
  public Tag setUintArrays(java.util.List<java.lang.Long> uintArrays) {
    this.uintArrays = uintArrays;
    return this;
  }

  /**
   * The unsigned integer value (C, S, I tags).
   * @return value or {@code null} for none
   */
  public java.lang.Long getUintValue() {
    return uintValue;
  }

  /**
   * The unsigned integer value (C, S, I tags).
   * @param uintValue uintValue or {@code null} for none
   */
  public Tag setUintValue(java.lang.Long uintValue) {
    this.uintValue = uintValue;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUnused2() {
    return unused2;
  }

  /**
   * @param unused2 unused2 or {@code null} for none
   */
  public Tag setUnused2(java.lang.String unused2) {
    this.unused2 = unused2;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUnused3() {
    return unused3;
  }

  /**
   * @param unused3 unused3 or {@code null} for none
   */
  public Tag setUnused3(java.lang.String unused3) {
    this.unused3 = unused3;
    return this;
  }

  @Override
  public Tag set(String fieldName, Object value) {
    return (Tag) super.set(fieldName, value);
  }

  @Override
  public Tag clone() {
    return (Tag) super.clone();
  }

}
